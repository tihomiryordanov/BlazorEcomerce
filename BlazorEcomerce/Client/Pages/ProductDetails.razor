@page "/product/{id:int}"
@inject IProductService productService


@if (_product==null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@_product.ImageUrl" alt="@_product.Title"/>
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_product.Title</h2>
            <p>@_product.Description</p>
            @if (_product.Variants!=null && _product.Variants.Count>1)
            {
                <div class="mb-3">
                    <select class="form-select" @bind="currentTypeId">
                        @foreach (var variant in _product.Variants)
                        {
                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                        }
                    </select>
                </div>
            }
            
                @if (GetSelectedVariant()!=null)
                {
                    if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                    {
                        <h6 class="text-muted original-price">
                            $@GetSelectedVariant().OriginalPrice
                        </h6>
                    }
                        <h4 class="price">
                           $@GetSelectedVariant().Price
                        </h4>
                }

        </div>
    </div>
}

@code {
    private Product? _product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;


    [Parameter]
    public int Id{ get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        var result = await productService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            _product = result.Data;
            if (_product.Variants.Count>0)
            {
                currentTypeId = _product.Variants[0].ProductTypeId;
            }
        }
    }


    private ProductVariant GetSelectedVariant()
    {
        var variant = _product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }
}
